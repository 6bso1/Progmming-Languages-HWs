(defun gppinterpreter (filename)
  (let ((count 0)
        (my-array (make-array '(1000))))
    (with-open-file (stream filename)
      (do ((char (read-char stream nil)
                 (read-char stream nil)))
          ((null char))
        (setf (aref my-array count) char)
        (incf count)))
    (print my-array)
    (print count)
    
    (dotimes (n count)
      (case (aref my-array n)
      
      (#\+ (format t "OP_PLUS ~%"))
      (#\- (format t "OP_MINUS ~%"))
      (#\/ (format t "OP_DIV ~%"))
      (#\* (if(eql (aref my-array (+ 1 n)) #\*)
            (format t "OP_DBLMULT ~%")
            (format t "OP_MULT ~%")))
      (#\" (format t "OP_OC ~%"))
      (#\, (format t "OP_COMMA ~%"))
      (#\o (case (aref my-array (+ n 1))
            (#\r (if(eql (aref my-array (- n 1)) #\f)
                    (format t "KW_FOR ~%")
                    (format t "KW_OR~%")))))
      (#\a (case (aref my-array (+ n 1)) 
            (#\n (if(eql (aref my-array (+ n 2)) #\d)
                  (format t "KW_AND ~%")))
            (#\p (if(and (eql (aref my-array (+ n 2)) #\p) (eql (aref my-array (+ n 3)) #\e) (eql (aref my-array (+ n 3)) #\n))
                  (format t "KW_APPEND~%")))))
      (#\n (case (aref my-array (+ n 1)) 
            (#\o (if(eql (aref my-array (+ n 2)) #\t)
                  (format t "KW_NOT ~%")))
            (#\i (if(eql (aref my-array (+ n 2)) #\l)
                  (format t "KW_NIL ~%")))))
      (#\s (case (aref my-array (+ n 1)) 
            (#\e (if(eql (aref my-array (+ n 2)) #\t)
                  (format t "KW_SET ~%")))))
      (#\i (if(eql (aref my-array (+ n 1)) #\f)
              (format t "KW_IF ~%")))
      (#\l (case (aref my-array (+ n 1))
              (#\i (if(and (eql (aref my-array (+ n 2)) #\s) (eql (aref my-array (+ n 3)) #\t))
                      (format t "KW_LIST~%")))
              (#\o (if(and (eql (aref my-array (+ n 2)) #\a) (eql (aref my-array (+ n 3)) #\d))
                      (format t "KW_LOAD~%")))
              (#\e (if(and (eql (aref my-array (+ n 2)) #\s) (eql (aref my-array (+ n 3)) #\s))
                      (format t "KW_LESS~%")))))
      (#\d (if(and (eql (aref my-array (+ n 1)) #\i) (eql (aref my-array (+ n 2)) #\s) (eql (aref my-array (+ n 3)) #\p))
              (format t "KW_DISP~%")))
      (#\t (if(and (eql (aref my-array (+ n 1)) #\r) (eql (aref my-array (+ n 2)) #\u) (eql (aref my-array (+ n 3)) #\e))
              (format t "KW_TRUE~%")))
    ))))

(write-line "Enter a filename: ")
(setq filename (read-line))
(gppinterpreter filename)